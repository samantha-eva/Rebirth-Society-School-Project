{# templates/payment/index.html.twig #}
{% extends 'base.html.twig' %}

{% block body %}
<h1>Paiement</h1>

<div id="payment-container" style="max-width: 500px; margin: auto;">
    <form id="payment-form">
        <div id="payment-element"></div>
        <button id="submit" type="button" style="margin-top: 20px;">Payer</button>
        <div id="error-message" style="color: red; margin-top: 10px;"></div>
    </form>
</div>

<script src="https://js.stripe.com/v3/"></script>
<script>
    const stripe = Stripe("{{ stripe_public_key }}");

    async function initPayment() {
        try {
            // 1️⃣ Create PaymentIntent on the backend
            const response = await fetch("{{ path('create_payment_intent') }}", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({}) // optional payload
            });

            const data = await response.json();
            const clientSecret = data.clientSecret;

            // 2️⃣ Initialize Stripe Elements
            const elements = stripe.elements({ clientSecret });

            // 3️⃣ Create and mount the PaymentElement
            const paymentElement = elements.create("payment");
            paymentElement.mount("#payment-element");

            // 4️⃣ Handle form submission
            const submitButton = document.getElementById("submit");
            submitButton.addEventListener("click", async () => {
                submitButton.disabled = true; // prevent multiple clicks
                document.getElementById("error-message").textContent = "";

                const { error } = await stripe.confirmPayment({
                    elements,
                    confirmParams: {
                        return_url: "{{ url('payment_success') }}"
                    }
                });

                if (error) {
                    document.getElementById("error-message").textContent = error.message;
                    submitButton.disabled = false;
                }
            });
        } catch (err) {
            console.error("Erreur lors de l'initialisation du paiement:", err);
            document.getElementById("error-message").textContent = "Impossible de créer le paiement.";
        }
    }

    initPayment();
</script>
{% endblock %}

